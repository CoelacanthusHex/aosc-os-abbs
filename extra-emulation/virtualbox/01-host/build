# Adapted from Arch Linux
VER=$PKGVER

"$SRCDIR"/configure \
    --disable-docs \
    --enable-webservice \
    --enable-vde \
    --enable-vnc \
    --disable-kmods \
    --with-makeself=/usr/bin/echo

source "$SRCDIR"/env.sh
kmk

abinfo "Building RDP plugin ..."
kmk -C "$SRCDIR"/src/VBox/RDP/client-1.8.4
abinfo "Building VNC plugin ..."
kmk -C "$SRCDIR"/src/VBox/ExtPacks/VNC packing
abinfo "Building virtualbox image mounter ..."
kmk -C "$SRCDIR"/src/VBox/ImageMounter/vboximg-mount

OUTPUTDIR="$SRCDIR"/out/linux.amd64/release/bin

abinfo "Preparing target directories ..."
install -vdm755 "$PKGDIR"/usr/{src,bin,lib/virtualbox}

abinfo "Installing binaries ..."
install -vm755 "$OUTPUTDIR"/VBox.sh "$PKGDIR"/usr/bin/VBox
for i in VBoxHeadless VBoxManage VBoxSDL VirtualBox vboxwebsrv VBoxBalloonCtrl; do
    ln -svf VBox "$PKGDIR"/usr/bin/$i
    ln -svf VBox "$PKGDIR"/usr/bin/${i,,}
done

install -vm755 "$OUTPUTDIR"/VBoxTunctl "$PKGDIR"/usr/bin
install -vm755 "$OUTPUTDIR"/rdesktop-vrdp "$PKGDIR"/usr/bin
install -vm755 "$OUTPUTDIR"/vboximg-mount "$PKGDIR"/usr/bin

abinfo "Installing libraries ..."
install -vm755 "$OUTPUTDIR"/*.so "$PKGDIR"/usr/lib/virtualbox
install -vm644 "$OUTPUTDIR"/*.r0 "$OUTPUTDIR"/VBoxEFI*.fd "$PKGDIR"/usr/lib/virtualbox

abinfo "(1) Installing setuid root binaries ..."
for i in VBoxSDL VBoxHeadless VBoxNetDHCP VBoxNetAdpCtl VBoxNetNAT VirtualBoxVM; do
    install -vm4755 "$OUTPUTDIR/$i" -t "$PKGDIR"/usr/lib/virtualbox
done

abinfo "(2) Installing other binaries ..."
for i in VBoxManage VirtualBox VBoxSVC VBoxExtPackHelperApp VBoxXPCOMIPCD VBoxTestOGL VBoxBalloonCtrl vboxwebsrv webtest; do
    install -vm755 "$OUTPUTDIR/$i" -t "$PKGDIR"/usr/lib/virtualbox
done

abinfo "Installing components ..."
install -vdm755 "$PKGDIR"/usr/lib/virtualbox/components
install -vm755 "$OUTPUTDIR"/components/* -t "$PKGDIR"/usr/lib/virtualbox/components

abinfo "Installing extensions packs ..."
install -vdm755 "$PKGDIR"/usr/lib/virtualbox/ExtensionPacks

abinfo "Installing language files ..."
install -vdm755 "$PKGDIR"/usr/share/virtualbox/nls
install -vm755 "$OUTPUTDIR"/nls/*.qm -t "$PKGDIR"/usr/share/virtualbox/nls

abinfo "Installing rdesktop keymaps ..."
install -vdm755 "$PKGDIR"/usr/share/virtualbox/rdesktop-vrdp-keymaps
install -vm644 "$OUTPUTDIR"/rdesktop-vrdp-keymaps/* "$PKGDIR"/usr/share/virtualbox/rdesktop-vrdp-keymaps

abinfo "Installing other scripts ..."
install -vm755 "$OUTPUTDIR"/VBoxCreateUSBNode.sh "$OUTPUTDIR"/VBoxSysInfo.sh -t "$PKGDIR"/usr/share/virtualbox

abinfo "Installing icon files ..."
install -vDm644 "$OUTPUTDIR"/VBox.png "$PKGDIR"/usr/share/pixmaps/VBox.png

pushd "$OUTPUTDIR"/icons >/dev/null
for i in *; do
    install -vd "$PKGDIR"/usr/share/icons/hicolor/$i/mimetypes
    cp -v $i/* "$PKGDIR"/usr/share/icons/hicolor/$i/mimetypes
done
popd >/dev/null

abinfo "Installing desktop files ..."
install -Dvm644 "$OUTPUTDIR"/virtualbox.desktop "$PKGDIR"/usr/share/applications/virtualbox.desktop
install -Dvm644 "$OUTPUTDIR"/virtualbox.xml "$PKGDIR"/usr/share/mime/packages/virtualbox.xml

abinfo "Installing configuration files ..."
install -vdm755 "$PKGDIR"/etc/vbox
echo 'INSTALL_DIR=/usr/lib/virtualbox' > "$PKGDIR"/etc/vbox/vbox.cfg

abinfo "Installing SDK ..."
install -Dvm755 "$OUTPUTDIR"/vboxshell.py "$PKGDIR"/usr/lib/virtualbox/vboxshell.py

pushd "$OUTPUTDIR"/sdk/installer
VBOX_INSTALL_PATH=/usr/lib/virtualbox python3 vboxapisetup.py install --root "$PKGDIR"
popd

rm -rv "$OUTPUTDIR"/sdk/installer
mv -v "$OUTPUTDIR"/sdk "$PKGDIR"/usr/lib/virtualbox

cp -rv "$OUTPUTDIR"/src "$PKGDIR"/usr/src/vboxhost-$VER

abinfo "Installing guest utils ..."
pushd "$OUTPUTDIR"/additions

abinfo "Forward port DKMS"
cat > "$PKGDIR"/usr/src/vboxhost-$PKGVER/dkms.conf << EOF
PACKAGE_NAME="vboxhost"
PACKAGE_VERSION=$PKGVER
AUTOINSTALL=yes

BUILT_MODULE_NAME[0]="vboxdrv"
BUILT_MODULE_LOCATION[0]="vboxdrv"
DEST_MODULE_LOCATION[0]="/kernel/misc"

BUILT_MODULE_NAME[1]="vboxnetflt"
BUILT_MODULE_LOCATION[1]="vboxnetflt"
DEST_MODULE_LOCATION[1]="/kernel/misc"

BUILT_MODULE_NAME[2]="vboxnetadp"
BUILT_MODULE_LOCATION[2]="vboxnetadp"
DEST_MODULE_LOCATION[2]="/kernel/misc"

EOF

cat > "$PKGDIR"/usr/src/vboxhost-$PKGVER/do_dkms << EOF
#!/bin/sh

ACTION=
if [ "$1" = "install" ]; then
  ACTION="install"
  MODULE="$2"
  VERSION="$3"
elif [ "$1" = "uninstall" ]; then
  shift
  ACTION="uninstall"
  OLDMODULES="$*"
  break
fi

DKMS=`which dkms 2>/dev/null`
if [ -n "$DKMS" ]
then
    if [ "$ACTION" = "uninstall" ]; then

        echo "Uninstalling modules from DKMS"
        for m in $OLDMODULES
        do
            $DKMS status -m $m | while read line
            # first, remove _any_ old module
            do
                if echo "$line" | grep -q added > /dev/null ||
                   echo "$line" | grep -q built > /dev/null ||
                   echo "$line" | grep -q installed > /dev/null; then
                    # either 'vboxvideo, <version>: added'
                    # or 'vboxvideo, <version>, ...: installed'
                    version=`echo "$line" | sed "s/$m,\([^,]*\)[,:].*/\1/;t;d"`
                    echo "  removing old DKMS module $m version $version"
                    $DKMS remove -m $m -v $version --all
                fi
            done
        done
        exit 0

    elif [ "$ACTION" = "install" ]; then

        echo "Attempting to install using DKMS"
        if $DKMS add -m $MODULE -v $VERSION &&
            $DKMS build -m $MODULE -v $VERSION &&
            $DKMS install -m $MODULE -v $VERSION --force
        then
            exit 0
        fi
        echo "Failed to install using DKMS, attempting to install without"

    fi
fi

exit 1
EOF

chmod -v +x "$PKGDIR"/usr/src/vboxhost-$PKGVER/do_dkms
chmod -v 0755 "$PKGDIR"/usr/lib/virtualbox/VirtualBox
