##### Control part variables
UPDATE=${PKGVER:2:-3}
BUILD=${PKGVER:(-2)}
SJAVAC=0
[ "${CROSS:-$ARCH}" = "amd64" ] && export JARCH="x86_64" CONFARCH="amd64"
[ "${CROSS:-$ARCH}" = "armel" ] && export JARCH="aarch32" CONFARCH="aarch32"
[ "${CROSS:-$ARCH}" = "arm64" ] && export JARCH="aarch64" CONFARCH="aarch64"
[ "${CROSS:-$ARCH}" = "mipsel" ] && export JARCH="mipsel" CONFARCH="mipsel"
[ "${CROSS:-$ARCH}" = "powerpc" ] && export JARCH="ppc" CONFARCH="ppc"
[ "${CROSS:-$ARCH}" = "ppc64el" ] && export JARCH="ppc64le" CONFARCH="ppc64le"

if [[ "${CROSS:-$ARCH}" != "amd64" && "${CROSS:-$ARCH}" != armel && "${CROSS:-$ARCH}" != ppc64* && "${CROSS:-$ARCH}" != "arm64" ]]; then
    config_zero="--with-jvm-variants=zero --enable-precompiled-headers"
    SJAVAC=0
else
    config_zero=" "
fi

if [[ "${SJAVAC}" == "1" ]]; then
    use_sjavac="--enable-sjavac" # Just a simple switch. And sjavac.jar is not needed, since JDK 8 has built-in a similar routine
fi

if [[ "${CROSS:-$ARCH}" = armel ]]; then
    config_bits="--host=armv7a-hardfloat-linux-gnueabi --build=armv7a-hardfloat-linux-gnueabi"
fi

unset JAVA_HOME
unset _JAVA_OPTIONS

install -d -m 755 "$SRCDIR"/image
sh configure \
    --prefix="$SRCDIR"/image \
    --with-version-pre='' \
    --with-version-opt="AOSC" \
    --with-stdc++lib=dynamic \
    --disable-warnings-as-errors \
    --enable-unlimited-crypto \
    --with-zlib=system \
    --with-libpng=system \
    --with-libjpeg=system \
    ${config_zero} ${use_sjavac} \
    ${config_bits} \
    --enable-precompiled-headers \
    --with-extra-cxxflags="${EXTRA_CPP_FLAGS}" \
    --with-extra-cflags="${EXTRA_CFLAGS}" \
    --with-extra-ldflags="${LDFLAGS}"

# FIXME: use system giflibwhen possible

make images docs

mkdir -p "$PKGDIR"/usr/lib/java-11
mkdir -p "$PKGDIR/etc/"
install -d -m 755 "$PKGDIR"/usr/share/doc

IMAGE_FOLDER="$(readlink -f build/linux-*-normal-*-release/images/)"
cp -r "${IMAGE_FOLDER}"/jdk/* "$PKGDIR"/usr/lib/java-11/
cp -r "${IMAGE_FOLDER}"/docs "$PKGDIR"/usr/share/doc/openjdk-11/
mv "$PKGDIR"/usr/lib/java-11/conf "$PKGDIR"/etc/openjdk-11/
ln -sv /etc/openjdk-11/ "$PKGDIR"/usr/lib/java-11/conf

find "$PKGDIR"/usr/lib/java-11/man -type l -delete
find "$PKGDIR" -iname '*.diz' -exec rm {} \;
find "$PKGDIR" -iname '*.debuginfo' -exec rm {} \;

mkdir -p "$PKGDIR"/usr/src/openjdk-11
mv "$PKGDIR"/usr/lib/java-11/lib/src.zip "$PKGDIR"/usr/src/openjdk-11/src.zip
ln -sv /usr/src/openjdk-11/src.zip "$PKGDIR"/usr/lib/java-11/lib/src.zip


mkdir -p "$PKGDIR"/etc/ssl/certs/java-11
mv "$PKGDIR"/usr/lib/java-11/lib/security/cacerts "$PKGDIR"/etc/ssl/certs/java-11/

ln -sfv /etc/ssl/certs/java-11/cacerts "$PKGDIR"/usr/lib/java-11/lib/security/cacerts


cat > "$SRCDIR"/autobuild/conffiles << EOF
/etc/openjdk-11/security/java.policy
/etc/openjdk-11/security/policy/limited/default_US_export.policy
/etc/openjdk-11/security/policy/limited/default_local.policy
/etc/openjdk-11/security/policy/limited/exempt_local.policy
/etc/openjdk-11/security/policy/unlimited/default_US_export.policy
/etc/openjdk-11/security/policy/unlimited/default_local.policy
/etc/openjdk-11/security/policy/README.txt
/etc/openjdk-11/security/java.security
/etc/openjdk-11/management/jmxremote.password.template
/etc/openjdk-11/management/management.properties
/etc/openjdk-11/management/jmxremote.access
/etc/openjdk-11/net.properties
/etc/openjdk-11/sound.properties
/etc/openjdk-11/logging.properties
EOF

unset JARCH CONFARCH
